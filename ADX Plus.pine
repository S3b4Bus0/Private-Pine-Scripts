//@version=5
//
// Author: benso87
// benso87.com
//
//
indicator('ADX+', shorttitle='ADX+', precision=2, max_bars_back=500)

nocolor=color.new(color.white, transp=100)
////////////////////////////////////////////////////////////
// Inputs

// General
length = input.int(14, title='Length', minval=1, group='General')

// Style
colorType = input.string('Dynamic', title='Color Type', options=['Static', 'Dynamic', 'MA Dependent'], group='Style')
colorStatic = input.color(color.white, title='Static Color', group='Style')
levelLow = input.float(20, title='Low', inline='low', minval=0, maxval=100, group='Style')
colorLow = input.color(color.aqua, title='', inline='low', group='Style')
colorMid = input.color(color.yellow, title='Mid', inline='mid', group='Style')
levelHigh = input.float(50, title='High', inline='high', minval=0, maxval=100, group='Style')
colorHigh = input.color(color.red, title='', inline='high', group='Style')
colorAbove = input.color(#0bff00, title='Above MA', group='Style')
colorBelow = input.color(#ff0014, title='Below MA', group='Style')
lineWidth = input.int(3, title='Line Width', minval=1, maxval=4, group='Style')

// Moving Average
useMA = input.bool(false, title='Moving Average', group='Moving Average')
maType = input.string('EMA', title='MA Type', options=['EMA', 'SMA'], group='Moving Average')
maLength = input.int(100, title='MA Length', minval=1, group='Moving Average')
maColorDef = input.color(color.white, title='MA Color', group='Moving Average')
maFill = input.bool(false, title='MA Fill', group='Moving Average')

// Level Plots
plotLevels = input.bool(true, title='Show Level Lines', group='Level Plots')


///////////////////////////////////////////////////////////////////////////////
// Functions

// Moving average type
f_ma(source, length, type) =>
    switch type
        'SMA' => ta.sma(source, length)
        'EMA' => ta.ema(source, length)
        'RMA' => ta.rma(source, length)
        'WMA' => ta.wma(source, length)


////////////////////////////////////////////////////////////
// Calculations

up = ta.change(high)
down = -ta.change(low)
plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
trur = ta.rma(ta.tr, length)
plus = fixnan(100 * ta.rma(plusDM, length) / trur)
minus = fixnan(100 * ta.rma(minusDM, length) / trur)
sum = plus + minus
adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), length)

adxMA = f_ma(adx, maLength, maType)

colorDynamic = adx >= levelHigh ? colorHigh : adx >= levelLow and adx < levelHigh ? colorMid : colorLow
colorMADep = adx >= adxMA ? colorAbove : adx <= adxMA ? colorBelow : colorStatic
adxColor = colorType == 'Dynamic' ? colorDynamic : colorType == 'MA Dependent' ? colorMADep : colorStatic

maColor = maFill ? adxColor : maColorDef

////////////////////////////////////////////////////////////
// Plots

adxPlot = plot(adx, title='ADX', color=adxColor, linewidth=lineWidth)
adxMAPlot = plot(useMA ? adxMA : na, title='ADX MA', color=maColor, linewidth=1)

fill(adxPlot, adxMAPlot, color=maFill ? color.new(adxColor, transp=70) : na)

hline(plotLevels ? levelLow : na, title='Low Level', linestyle=hline.style_dashed, color=color.new(color.white, transp=50))
hline(plotLevels ? levelHigh : na, title='High Level', linestyle=hline.style_dashed, color=color.new(color.white, transp=50))